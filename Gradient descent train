#参数初始化
def initialize_params(dims):
    w=np.zeros((dims, 1))
    b=0
    return w,b 
    
#基于梯度下降的模型训练过程
def linear_train(X, y, learning_rate, epochs):
    w, b = initialize_params(X.shape[1])
    loss_list = []
    for i in range(1, epochs):   #计算当前预测值、损失函数、和参数偏导
        y_hat, loss, dw, db=linear_loss(X,y,w,b)
        loss_list.append(loss)
        w += -learning_rate * dw    #基于梯度下降更新参数
        b += -learning_rate * db
        if i%10000 == 0:
            print('epoch %d loss %f' % (i, loss))
        params = {    #保存参数
            'w': w,
            'b': b
        }
        grads = {
            'dw': w,
            'db': b
        }
    return loss_list, loss, params, grads
